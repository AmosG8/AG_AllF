%function [SummerizeDay_spont_Hyper, SummerizeDay_spont_Hypo, SummerizeDay_stim_Hyper, SummerizeDay_stim_Hypo]=SummerizeDay(EP_FILES_COMPILED)

%returns 4 cell arrays
%each of them has 2 rows: the 1st row contains strings with the days
%the 2nd contains a vector of S_or summerized for each day
%normalized for 100msec (Artificial_fps=10)
%% Definitions
Artificial_fps=10; %normalize S_or to 10fps
Default_fps=4.36; %for case the fps isn't provided in the structure
Imaging_Days=[];
EP_stim = struct('animalID',[],'conditionID',[],'dataFileName',[],...
    'daysAfterBaseline',[],'experimentType',[],'FOV',[],'fps',[],...
    'maxProjImg',[],'Coor',[],'C_df',[],'S_or',[],'StimVector',[],'SpeedVector',[]);
EP_spont = struct('animalID',[],'conditionID',[],'dataFileName',[],...
    'daysAfterBaseline',[],'experimentType',[],'FOV',[],'fps',[],...
    'maxProjImg',[],'Coor',[],'C_df',[],'S_or',[],'StimVector',[],'SpeedVector',[]);

%% 1. make new structs out of 'EP_FILES_COMPILED' named 'EP_spont' and 'EP_stim' 
%that contains only spont or stim

%1.1 make EP_spont
Spont_counter=1;
for iEX=1:numel(EP_FILES_COMPILED)
    if strcmp(EP_FILES_COMPILED(iEX).experimentType, 'SPONT')
       EP_spont(Spont_counter) = EP_FILES_COMPILED(iEX);
       Spont_counter=Spont_counter+1;
    end
end

%1.2 make EP_stim
Stim_counter=1;
for iEX=1:numel(EP_FILES_COMPILED)
    if strcmp(EP_FILES_COMPILED(iEX).experimentType, 'STIM')
       EP_stim(Stim_counter) = EP_FILES_COMPILED(iEX);
       Stim_counter=Stim_counter+1;
    end
end
%% 2. separate EP_spont and EP_stim each to Hypo and Hyper 
%so I get 4 structures in total
HyperStruct_spont=HypoHyper(EP_spont,'HYPER-TAC');
HypoStruct_spont=HypoHyper(EP_spont,'HYPO-TAC');

HyperStruct_stim=HypoHyper(EP_stim,'HYPER-TAC');
HypoStruct_stim=HypoHyper(EP_stim,'HYPO-TAC');

%% 3. find the days in which there was imaging and place them in a vector
%Imaging_Days is [ 'DAY_0' 'DAY_1'  'DAY_14' 'DAY_28' 'DAY_4'  'DAY_7' ]
Imaging_DaysHyper_spont = unique(extractfield(HyperStruct_spont, 'daysAfterBaseline'));
Imaging_DaysHypo_spont = unique(extractfield(HypoStruct_spont, 'daysAfterBaseline'));

Imaging_DaysHyper_stim = unique(extractfield(HyperStruct_stim, 'daysAfterBaseline'));
Imaging_DaysHypo_stim = unique(extractfield(HypoStruct_stim, 'daysAfterBaseline'));
%Imaging_Days is [ 'DAY_0' 'DAY_1'  'DAY_14' 'DAY_28' 'DAY_4'  'DAY_7' ]
%c = char(AG_days_of_imaging_spont)
%c(1,:)=day0
%c(1,5:end) ->the number

%% 4. Correct S_or and make cell arrays that contain same day data out of the structures done in section 2 

%4.1 for Spont Hyper
SummerizeDay_spont_Hyper=cell(2,numel(Imaging_DaysHyper_spont));%initialize the cell array
for iDay=1:numel(Imaging_DaysHyper_spont)  
    temp=[]; S_Or_Vec=[]; FOV=0;
    for iSpontEX=1:numel(HyperStruct_spont)
        if strcmp(HyperStruct_spont(iSpontEX).daysAfterBaseline, Imaging_DaysHyper_spont(iDay))
           S_Or_Vec= mean(HyperStruct_spont(iSpontEX).S_or,2);
           if HyperStruct_spont(iSpontEX).fps%the if is for a case we dont have the fps info
             S_Or_Vec= S_Or_Vec .* Artificial_fps ./ HyperStruct_spont(iSpontEX).fps; %this sets the results to be per 100msec
           else
               S_Or_Vec= S_Or_Vec .* Artificial_fps ./Default_fps;
               %AG changed the former calculation S_Or_Vec= S_Or_Vec .* Artificial_fps
               %./Default_fps;     30/10/16
           end
           temp=[temp;S_Or_Vec];%adding the vector values to temp below the formers
           SummerizeDay_spont_Hyper{3+FOV,iDay}=S_Or_Vec;
           FOV=FOV+1;
        end %of if matched day    
    end
    SummerizeDay_spont_Hyper{1,iDay}=Imaging_DaysHyper_spont(iDay);%title
    SummerizeDay_spont_Hyper{2,iDay}=temp;    %a cell with all the values
end

% 4.2 for Spont Hypo
SummerizeDay_spont_Hypo=cell(2,numel(Imaging_DaysHypo_spont));%initialize the cell array
for iDay=1:numel(Imaging_DaysHypo_spont)  
    temp=[];S_Or_Vec=[];FOV=0;
    for iSpontEX=1:numel(HypoStruct_spont)
        if strcmp(HypoStruct_spont(iSpontEX).daysAfterBaseline, Imaging_DaysHypo_spont(iDay))
           S_Or_Vec = mean(HypoStruct_spont(iSpontEX).S_or,2);
           if HypoStruct_spont(iSpontEX).fps
             S_Or_Vec=S_Or_Vec .* Artificial_fps ./ HypoStruct_spont(iSpontEX).fps;
           else
               S_Or_Vec=S_Or_Vec .* Artificial_fps ./Default_fps;
           end
           temp=[temp;S_Or_Vec];%adding the vector values to temp below the formers
           SummerizeDay_spont_Hypo{3+FOV,iDay}=S_Or_Vec;
           FOV=FOV+1;
        end     
    end
    SummerizeDay_spont_Hypo{1,iDay}=Imaging_DaysHypo_spont(iDay);%title
    SummerizeDay_spont_Hypo{2,iDay}=temp;    %a cell with rhe values
end
    
 %4.3 for Stim Hyper
SummerizeDay_stim_Hyper=cell(2,numel(Imaging_DaysHyper_stim));%initialize the cell array
for iDay=1:numel(Imaging_DaysHyper_stim)  
    temp=[]; S_Or_Vec=[];FOV=0;
    for iEX=1:numel(HyperStruct_stim)
        if strcmp(HyperStruct_stim(iEX).daysAfterBaseline, Imaging_DaysHyper_stim(iDay))
           S_Or_Vec = mean(HyperStruct_stim(iEX).S_or,2);
           if HyperStruct_stim(iEX).fps
             S_Or_Vec=S_Or_Vec .* Artificial_fps ./ HyperStruct_stim(iEX).fps; %this sets the results to be per 100msec
           else
               S_Or_Vec=S_Or_Vec .* Artificial_fps ./Default_fps;
           end
           temp=[temp;S_Or_Vec];%adding the vector values to temp below the formers
           SummerizeDay_stim_Hyper{3+FOV,iDay}=S_Or_Vec;
           FOV=FOV+1;
        end     
    end
    SummerizeDay_stim_Hyper{1,iDay}=Imaging_DaysHyper_stim(iDay);%title
    SummerizeDay_stim_Hyper{2,iDay}=temp;    %a cell with rhe values
end
 %4.4 for Stim Hypo
SummerizeDay_stim_Hypo=cell(2,numel(Imaging_DaysHypo_stim));%initialize the cell array
for iDay=1:numel(Imaging_DaysHypo_stim)  
    temp=[];S_Or_Vec=[];FOV=0;
    for iEX=1:numel(HypoStruct_stim)
        if strcmp(HypoStruct_stim(iEX).daysAfterBaseline, Imaging_DaysHypo_stim(iDay))
           S_Or_Vec = mean(HypoStruct_stim(iEX).S_or,2);
           if HypoStruct_stim(iEX).fps
             S_Or_Vec=S_Or_Vec .* Artificial_fps ./ HypoStruct_stim(iEX).fps;
           else
             S_Or_Vec=S_Or_Vec .* Artificial_fps ./Default_fps;
           end
           temp=[temp;S_Or_Vec];%adding the vector values to temp below the formers
           %store each FOV 
           SummerizeDay_stim_Hypo{3+FOV,iDay}=S_Or_Vec;
           FOV=FOV+1;
        end     
    end
    SummerizeDay_stim_Hypo{1,iDay}=Imaging_DaysHypo_stim(iDay);%title
    SummerizeDay_stim_Hypo{2,iDay}=temp;    %a cell with rhe values
end

%% 5. save the summary variables
save('stim_Hypo','SummerizeDay_stim_Hypo');
save('stim_Hyper','SummerizeDay_stim_Hyper');
save('spont_Hypo','SummerizeDay_spont_Hypo');
save('spont_Hyper','SummerizeDay_spont_Hyper');