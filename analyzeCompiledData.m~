%summary and xcross analysis of single experiment.

%the entry poins is the structure generated by "gatherCalciumMatFiles"

[FileName,path2sourceDir,FilterIndex] = uigetfile('*.*','Select the EP_FILES_COMPILED.mat');%AG added
%AG commneted   path2sourceDir =  '/Users/pb/Data/PBLab/David/Testing'; %point to directory containing experiment database
compiledFileName = 'EP_FILES_COMPILED.mat';
path2resDir = [path2sourceDir filesep 'RESULTS'];

%% define analysis parameters

prmts.doComputeXcorr = 1; %if to perform correlation analysis
prmts.doComputeSHIFT = 0;
prmts.doComputeSVD = 0;
prmts.doSubsampleImg = 1;
prmts.minCorrValToPlotEdges = 0.6;


if ~isdir(path2resDir)
    mkdir(path2resDir);
end

%% load data - data is saved as structure array
load (fullfile(path2sourceDir,compiledFileName))

%% 1. get the days of spont experiments 
%this function returns a cell array of the days in which there was imaging spont
AG_days_of_imaging_spont=AG_days_of_imaging_spont(EP_FILES_COMPILED);

%% Analysis section
nEXPERIMETS = numel(EP_FILES_COMPILED);
for iEXP = 1 : nEXPERIMETS
    
    thisEXP = EP_FILES_COMPILED(iEXP);
    
    fprintf('\nAnalyzing file %s \n (%d/%d)',thisEXP.dataFileName,iEXP,nEXPERIMETS);
    
    if prmts.doComputeXcorr
        fprintf('\n\t Correlation analysis started at %s',datestr(now,'hh:MM:ss'));
        thisEXP = computeXcorrAnalysis(thisEXP,prmts);
        EP_FILES_COMPILED = addNewFieldToNonScalarStruct (EP_FILES_COMPILED,thisEXP,iXP);
    end
    
    %does TAC change spont activity?
% -we get the vector spikes of each cell along a movie. we average to get the spikes per frame-time. 
%so this is a one value per cell.
% - we do this to all cells in all FOVs that correspond to the same imaging day. 
%we  get a vector.for each day
% - we do 1-way anova to see if TAC causes a change in any time point
   
%%% implementaion

%2 . append 'S_or' data from each exp to the relevant day_X
% loop over exps 
%  if ex_type is spont 
if strcmp(EP_FILES_COMPILED(iEXP).experimentType, 'SPONT') 
%    calculate the column that contains the means of each row in S_or of that exp
%    add the column to the relevant vector day_X  (need to transpose)
%  end
% 
% %%3. bar plot 

%% 4. anova
    %if prtms.doWhateverAnalysisYouWant
    %         fprintf('\n\t whateverAnalysisName started at %s',datestr(now,'hh:MM:ss'));
    %         thisEXP = whateverAnalysis(thisEXP,prmts); %input is always
    %         'thisEXP' and the 'prmts' structure - add to it whatever
    %         needed to parametrize your analysis function
    %         The output of the analysis function is again the 'thisEXP'
    %         structure. Specific results are added as new fields.
    %
    %         %use this function to add the new results to the EP_
    %         database, the funciton takes care of making the EP_ database
    %         suitable for adding the new fields. Wiht this approach, we
    %         can add new fields and not worry about uncompatible fieldnames. 
    %   
    %         EP_FILES_COMPILED = addNewFieldToNonScalarStruct (EP_FILES_COMPILED,thisEXP,iXP);
    %end
    
    
    
    
    
    %template for adding analysis steps
    
    %if prtms.doWhateverAnalysisYouWant
    %         fprintf('\n\t whateverAnalysisName started at %s',datestr(now,'hh:MM:ss'));
    %         thisEXP = whateverAnalysis(thisEXP,prmts); %input is always
    %         'thisEXP' and the 'prmts' structure - add to it whatever
    %         needed to parametrize your analysis function
    %         The output of the analysis function is again the 'thisEXP'
    %         structure. Specific results are added as new fields.
    %
    %         %use this function to add the new results to the EP_
    %         database, the funciton takes care of making the EP_ database
    %         suitable for adding the new fields. Wiht this approach, we
    %         can add new fields and not worry about uncompatible fieldnames. 
    %   
    %         EP_FILES_COMPILED = addNewFieldToNonScalarStruct (EP_FILES_COMPILED,thisEXP,iXP);
    %end
end %cycling experimetns