%xcross analysis of single experiment.

%the entry poins is the structure generated by "gatherCalciumMatFiles"
%path2sourceDir =  '/Users/pb/Data/PBLab/David/Testing'; %point to directory containing experiment database
path2sourceDir = '/data/Amos/TAC';
compiledFileName = 'EP_FILES_COMPILED.mat';
path2resDir = [path2sourceDir filesep 'RESULTS'];

%% define analysis parameters

prmts.doComputeXcorr = 1;
prmts.doComputeSHIFT = 0;
prmts.doComputeSVD = 0;
prmts.doSubsampleImg = 1;
prmts.minCorrValToPlotEdges = 0.6;


if ~isdir(path2resDir)
    mkdir(path2resDir);
end

%% load data - data is saved as structure array
load (fullfile(path2sourceDir,compiledFileName));
compiledFileNameNew=compiledFileName(1:end-4);
EP=eval(compiledFileNameNew);
%% AG added: separate the 'EP files compiled'-dataset-structure to 4 structures:
%  EP_Spont_Hypo
%  EP_SPont_Hyper
%  EP_Stim_Hypo
%  EP_Stim_Hyper
temp=SpontStim(EP,'SPONT');%this give all Spont ex that are both hyper and hypo
EP_Spont_Hypo=HypoHyper(temp,'HYPO-TAC');
EP_SPont_Hyper=HypoHyper(temp,'HYPER-TAC');

temp=SpontStim(EP,'STIM');
EP_Stim_Hyper=HypoHyper(temp,'HYPER-TAC');
EP_Stim_Hypo=HypoHyper(temp,'HYPO-TAC');

%% analysis of each structure and summerize by day

% %% 1.  find the days in which there was imaging and place them in a vector
% %Imaging_Days is [ 'DAY_0' 'DAY_1'  'DAY_14' 'DAY_28' 'DAY_4'  'DAY_7' ]
% Imaging_DaysHyper_spont = unique(extractfield(EP_SPont_Hyper, 'daysAfterBaseline'));
% Imaging_DaysHypo_spont = unique(extractfield(EP_Spont_Hypo, 'daysAfterBaseline'));
% Imaging_DaysHyper_stim = unique(extractfield(EP_Stim_Hyper, 'daysAfterBaseline'));
% Imaging_DaysHypo_stim = unique(extractfield(EP_Stim_Hypo, 'daysAfterBaseline'));

%% make cell arrays that contain same day data out of the structures done in section 2 
% the data has to be Xpos Ypos Xneg Yneg from computeXcorr
% spont_Hyper
SummerizeDay_Spont_Hyper=Summerize_Corr_Day(EP_SPont_Hyper,prmts);
SummerizeDay_Spont_Hypo=Summerize_Corr_Day(EP_Spont_Hypo,prmts);
SummerizeDay_Stim_Hyper=Summerize_Corr_Day(EP_Stim_Hyper,prmts);
SummerizeDay_Stim_Hypo=Summerize_Corr_Day(EP_Stim_Hypo,prmts);
%%
save('Corr_stim_Hypo.mat','SummerizeDay_Stim_Hypo');
save('Corr_stim_Hyper','SummerizeDay_Stim_Hyper');
save('Corr_spont_Hypo','SummerizeDay_Spont_Hypo');
save('Corr_spont_Hyper','SummerizeDay_Spont_Hyper');

% %% Analysis section
% 
% 
% nEXPERIMETS = numel(EP_FILES_COMPILED);
% 
% 
% for iEXP = 1 : nEXPERIMETS
%     
%     thisEXP = EP_FILES_COMPILED(iEXP);
%     
%     fprintf('\nAnalyzing file %s (%d/%d)',thisEXP.dataFileName,iEXP,nEXPERIMETS)
%     
%     if prmts.doComputeXcorr
%         fprintf('\n\t Correlation analysis started at %s',datestr(now,'hh:MM:ss'));
%         
%         %AG added an if below: because there is an unknown problem with the data in file 
%         %'MAT_540_4d_noPuff_Part1_Motion_Pix_correcte.mat
%         %I skip on it
%         if ~strcmp (thisEXP.dataFileName, 'MAT_540_4d_noPuff_Part1_Motion_Pix_correcte.mat')
%           thisEXP = computeXcorrAnalysis(thisEXP,prmts);
%           EP_FILES_COMPILED = addNewFieldToNonScalarStruct (EP_FILES_COMPILED,thisEXP,iEXP);%AG changed from iXP
%         end
%     end
%     
%     %template for adding analysis steps
%     
%     %if prtms.doWhateverAnalysisYouWant
%     %         fprintf('\n\t whateverAnalysisName started at %s',datestr(now,'hh:MM:ss'));
%     %         thisEXP = whateverAnalysis(thisEXP,prmts); %input is always
%     %         'thisEXP' and the 'prmts' structure - add to it whatever
%     %         needed to parametrize your analysis function
%     %         The output of the analysis function is again the 'thisEXP'
%     %         structure. Specific results are added as new fields.
%     %
%     %         %use this function to add the new results to the EP_
%     %         database, the funciton takes care of making the EP_ database
%     %         suitable for adding the new fields. Wiht this approach, we
%     %         can add new fields and not worry about uncompatible fieldnames. 
%     %   
%     %         EP_FILES_COMPILED = addNewFieldToNonScalarStruct (EP_FILES_COMPILED,thisEXP,iXP);
%     %end
%end %cycling experimetns